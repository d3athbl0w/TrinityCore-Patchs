From 8a69c83bf610dcbddac021bfe84c57fa40c9b20e Mon Sep 17 00:00:00 2001
From: d3athbl0w <d3athbl0w@hotmail.es>
Date: Wed, 13 Jul 2022 13:23:12 -0400
Subject: [PATCH] Core/Custom: New playerhastecap

---
 src/server/game/Entities/Player/Player.cpp | 49 ++++++++++++++++++++++
 src/server/game/Entities/Player/Player.h   |  1 +
 src/server/game/World/World.cpp            |  3 ++
 src/server/game/World/World.h              |  1 +
 4 files changed, 54 insertions(+)

diff --git a/src/server/game/Entities/Player/Player.cpp b/src/server/game/Entities/Player/Player.cpp
index 71cdc501b6..aa58191dd2 100644
--- a/src/server/game/Entities/Player/Player.cpp
+++ b/src/server/game/Entities/Player/Player.cpp
@@ -5526,6 +5526,55 @@ void Player::ApplyRatingMod(CombatRating combatRating, int32 value, bool apply)
     UpdateRating(combatRating);
 }
 
+void Player::UpdateInstantHasteCap()
+{
+    if (sWorld->getIntConfig(CONFIG_PLAYER_HASTE_CAP) == -1)
+        {
+        return;
+        }
+    
+        bool hasInstantHasteCap = (GetFloatValue(UNIT_FIELD_BASEATTACKTIME + 0) == 1
+             || GetFloatValue(UNIT_FIELD_BASEATTACKTIME + 1) == 1
+             || GetFloatValue(UNIT_FIELD_BASEATTACKTIME + 2) == 1
+             || GetFloatValue(UNIT_MOD_CAST_SPEED) == 0);
+    
+        if (m_baseRatingValue[CR_HASTE_MELEE] >= sWorld->getIntConfig(CONFIG_PLAYER_HASTE_CAP))
+         {
+        SetFloatValue(UNIT_MOD_CAST_SPEED, 0);
+        SetFloatValue(UNIT_FIELD_BASEATTACKTIME + BASE_ATTACK, 1);
+        SetFloatValue(UNIT_FIELD_BASEATTACKTIME + OFF_ATTACK, 1);
+        SetFloatValue(UNIT_FIELD_BASEATTACKTIME + RANGED_ATTACK, 1);
+        }
+    
+        else if (hasInstantHasteCap && m_baseRatingValue[CR_HASTE_MELEE] < sWorld->getIntConfig(CONFIG_PLAYER_HASTE_CAP))
+         {
+        SetFloatValue(UNIT_MOD_CAST_SPEED, 1.0f);
+        SetRegularAttackTime();
+        ApplyCastTimePercentMod(m_baseRatingValue[CR_HASTE_SPELL] * GetRatingMultiplier(CR_HASTE_SPELL), true);
+        
+            if (GetShapeshiftForm())
+             {
+             ShapeshiftForm form = GetShapeshiftForm();
+            //SpellShapeshiftEntry const* ssEntry = sSpellShapeshiftStore.LookupEntry(GetShapeshiftForm());
+            SpellShapeshiftFormEntry const* ssEntry = sSpellShapeshiftFormStore.LookupEntry(form);
+            if (ssEntry && ssEntry->CombatRoundTime)
+            //if (ssEntry && ssEntry->attackSpeed)
+                 {
+                SetAttackTime(BASE_ATTACK, ssEntry->CombatRoundTime);
+                SetAttackTime(OFF_ATTACK, ssEntry->CombatRoundTime);
+                SetAttackTime(RANGED_ATTACK, BASE_ATTACK_TIME);
+                }
+             }
+        }
+
+        if (CanModifyStats())
+        {
+        UpdateDamagePhysical(BASE_ATTACK);
+        UpdateDamagePhysical(OFF_ATTACK);
+        UpdateDamagePhysical(RANGED_ATTACK);
+        }
+}
+
 void Player::UpdateRating(CombatRating cr)
 {
     int32 amount = m_baseRatingValue[cr];
diff --git a/src/server/game/Entities/Player/Player.h b/src/server/game/Entities/Player/Player.h
index 8a5902c76b..25d72005a8 100644
--- a/src/server/game/Entities/Player/Player.h
+++ b/src/server/game/Entities/Player/Player.h
@@ -1656,6 +1656,7 @@ class TC_GAME_API Player : public Unit, public GridObject<Player>
         void ApplyRatingMod(CombatRating cr, int32 value, bool apply);
         void UpdateRating(CombatRating cr);
         void UpdateAllRatings();
+        void UpdateInstantHasteCap();
 
         void CalculateMinMaxDamage(WeaponAttackType attType, bool normalized, bool addTotalPct, float& minDamage, float& maxDamage, uint8 damageIndex) const override;
 
diff --git a/src/server/game/World/World.cpp b/src/server/game/World/World.cpp
index 10ad3e4337..6a3a63a5ff 100644
--- a/src/server/game/World/World.cpp
+++ b/src/server/game/World/World.cpp
@@ -1530,6 +1530,9 @@ void World::LoadConfigSettings(bool reload)
     m_int_configs[CONFIG_WINTERGRASP_NOBATTLETIME] = sConfigMgr->GetIntDefault("Wintergrasp.NoBattleTimer", 150);
     m_int_configs[CONFIG_WINTERGRASP_RESTART_AFTER_CRASH] = sConfigMgr->GetIntDefault("Wintergrasp.CrashRestartTimer", 10);
 
+    // Player haste cap
+    m_int_configs[CONFIG_PLAYER_HASTE_CAP] = sConfigMgr->GetIntDefault("Player.HasteCap", 0);
+
     // Stats limits
     m_bool_configs[CONFIG_STATS_LIMITS_ENABLE] = sConfigMgr->GetBoolDefault("Stats.Limits.Enable", false);
     m_float_configs[CONFIG_STATS_LIMITS_DODGE] = sConfigMgr->GetFloatDefault("Stats.Limits.Dodge", 95.0f);
diff --git a/src/server/game/World/World.h b/src/server/game/World/World.h
index da47e2ed6c..be78538146 100644
--- a/src/server/game/World/World.h
+++ b/src/server/game/World/World.h
@@ -395,6 +395,7 @@ enum WorldIntConfigs
     CONFIG_WINTERGRASP_BATTLETIME,
     CONFIG_WINTERGRASP_NOBATTLETIME,
     CONFIG_WINTERGRASP_RESTART_AFTER_CRASH,
+    CONFIG_PLAYER_HASTE_CAP, // Player haste cap
     CONFIG_PACKET_SPOOF_POLICY,
     CONFIG_PACKET_SPOOF_BANMODE,
     CONFIG_PACKET_SPOOF_BANDURATION,
-- 
2.36.1.windows.1

